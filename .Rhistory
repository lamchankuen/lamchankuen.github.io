shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
fmlist(1)
fmlist["Qn1"]
fmlist["Qn1"]$cofficients
fmlist["Qn1"]$Cofficients
fmlist["Qn1"]$Cofficients
fmlist["Qn1"]$Cofficients(1)
fmlist["Qn1"]$Cofficients[1]
coef(fmlist["Qn1"])["conc"]
coef(fmlist["Qn1"])
fmlist["Qn1"]
coef(fmlist[1])
fmlist[1]
fmlist[1]$Cofficients
fmlist[1]$Cofficient
fmlist[1]
fmlist[1]["Cofficients"]
fmlist[1].["Cofficients"]
coef(summary(fmlist[1]))[,4]
coef(summary(fmlist[1]))[,2]
coef(summary(fmlist[1]))[,1]
coef(summary(fmlist[1]))
coef(summary(fmlist))
coef(fmlist[1])[,1]
gm <- fmlist["Qn1"]
gm
gm$Cofficients
coef(gm)
summary(gm)
gm["Qn1"]$cofficients
gm["Qn1"]$coefficients
gm["Qn1"]$coefficients[1]
gm["Qn1"].coefficients[1]
gm["Qn1"]
gm["Qn1"]$coefficients[2]
gm$coefficients[2]
gm[1]$coefficients[2]
lapply(fmlist, function(f) summary(f)$coefficients[,4])
lapply(fmlist["Qn1"], function(f) summary(f)$coefficients[,4])
fmlist["Qn1"], function(f) summary(f)$coefficients[,4]
lapply(fmlist["Qn1"], function(f) summary(f)$coefficients[,4])
gm <- lapply(fmlist["Qn1"], function(f) summary(f)$coefficients[,4])
gm
gm(1)
gm[1]
gm[1,1
]
gm[1:1]
gm[1]$conc
gm$conc
gm$1
gm(1)
gm[,1]
gm[1,
]
gm[1,]
gm[2,]
lapply(fmlist["Qn1"], function(f) summary(f)$coefficients[,4])
lapply(fmlist["Qn1"], function(f) summary(f)$coefficients[1,4])
lapply(fmlist["Qn1"], function(f) summary(f)$coefficients[2,4])
id <- input$id1
lapply(fmlist["Qn1"], function(f) summary(f)$coefficients[2,4])
id <- "Qn1"
lapply(fmlist[id], function(f) summary(f)$coefficients[2,4])
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
x1 <- sapply(fmlist[id], function(f) summary(f)$coefficients[1,4])
x1 <- sapply(fmlist, function(f) summary(f)$coefficients[1,4])
x1[1]
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
require(stats); require(graphics)
as.factor(CO2$Plant)
as.factor(CO2$Type)
as.factor(CO2$Treatment)
num <- length(unique(CO2$Plant))
xyplot(uptake ~ conc | Plant, data = CO2, show.given = FALSE, type = "b", col=rainbow(num))
plotmatrix(CO2[, 1:3])
library(ggplot)
library(lattice)
library(ggplot2)
library(lattice)
require(stats); require(graphics)
as.factor(CO2$Plant)
as.factor(CO2$Type)
as.factor(CO2$Treatment)
num <- length(unique(CO2$Plant))
xyplot(uptake ~ conc | Plant, data = CO2, show.given = FALSE, type = "b", col=rainbow(num))
plotmatrix(CO2[, 1:3])
pair(CO2[, 1:3])
pairs(CO2[, 1:3])
plotmatrix(CO2[, 1:3])
pg <- ggplot(CO2, aes(conc, uptake)) + geom_point() +
+ facet_grid(~Plant, labeller = label_both) + coord_equal() +
+ labs(x = "Uptake", y = "Conc")
pg <- ggplot(CO2, aes(conc, uptake)) + geom_point() +
facet_grid(~Plant, labeller = label_both) + coord_equal() +
labs(x = "Uptake", y = "Conc")
print(pg)
pg <- ggplot(CO2, aes(conc, uptake)) + geom_point() +
facet_grid(~Plant, labeller = label_both, nrow = 2) + coord_equal() +
labs(x = "Uptake", y = "Conc")
print(pg)
facet_grid(~Plant, labeller = label_both) + coord_equal() +
pg <- ggplot(CO2, aes(conc, uptake)) + geom_point() +
facet_grid(~Plant, labeller = label_both) + coord_equal() +
labs(x = "Uptake", y = "Conc")
print(pg)
xyplot(uptake ~ conc | Plant, data = CO2, show.given = FALSE, type = "b", col=rainbow(num))
qplot(conc, uptake, data=CO2) + facet_grid(Plant ~ .)
qplot(conc, uptake, data=CO2) + facet_grid(Treatment~Type)
qplot(conc, uptake, data=CO2)
+ facet_grid(Treatment~Type)
qplot(conc, uptake, data=CO2) + facet_grid(Treatment~Type)
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
fmlist <- list()
for (pp in levels(CO2$Type+Treatment)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = Type+Treatment == pp)
}
for (pp in levels(CO2$Type+CO2$Treatment)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = Type+Treatment == pp)
}
for (pp in levels(CO2$Type+CO2$Treatment)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = Comb == pp)
}
for (pp in levels(CO2$Plant)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = Plant == pp)
}
fmlist <- list()
for (pp in levels(CO2$Type+CO2$Treatment)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = Type+Treatment == pp)
}
library(ggplot2)
library(lattice)
require(stats); require(graphics)
num <- length(unique(CO2$Plant))
xyplot(uptake ~ conc | Plant, data = CO2, show.given = FALSE, type = "b", col=rainbow(num))
pl <- xyplot(lat ~ long | cut(depth, 3), data = quakes,
+     aspect = "iso", pch = ".", cex = 2, type = c("p",
+         "g"), xlab = "Longitude", ylab = "Latitude",
+     strip = strip.custom(strip.names = TRUE, var.name = "Depth"))
pg <- ggplot(CO2, aes(conc, uptake)) + geom_point() +
facet_grid(~Plant, labeller = label_both) + coord_equal() +
labs(x = "Uptake", y = "Conc")
print(pg)
pg <- ggplot(CO2, aes(conc, uptake)) + geom_point() +
facet_grid(~Plant, labeller = label_both) + coord_equal() +
labs(x = "Uptake", y = "Conc")
print(pg)
pl <- xyplot(lat ~ long | cut(depth, 3), data = quakes,
+     aspect = "iso", pch = ".", cex = 2, type = c("p",
+         "g"), xlab = "Longitude", ylab = "Latitude",
+     strip = strip.custom(strip.names = TRUE, var.name = "Depth"))
fmlist <- list()
for (pp in levels(CO2$Type+CO2$Treatment)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = Type+Treatment == pp)
}
for (pp in levels(CO2$Type+CO2$Treatment)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = Type&Treatment == pp)
}
for (pp in levels(CO2$Type+CO2$Treatment)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = c(Type,Treatment) == pp)
}
for (pp in levels(c(CO2$Type,CO2$Treatment)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = c(Type,Treatment) == pp)
}
for (pp in levels(factor(c(as.character(Co2$Type),as.character(CO2$Treatment)))) {
for (pp in levels(factor(c(as.character(Co2$Type),as.character(CO2$Treatment)))) {
for (pp in levels(factor(c(as.character(Co2$Type),as.character(CO2$Treatment))))) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = c(Type,Treatment) == pp)
}
for (pp in levels(factor(c(as.character(CO2$Type),as.character(CO2$Treatment))))) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = c(Type,Treatment) == pp)
}
for (pp in levels(factor(c(as.character(CO2$Type),as.character(CO2$Treatment))))) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = c(as.character(CO2$Type),as.character(CO2$Treatment)) == pp)
}
fmlist <- list()
for (pp in levels(CO2$Plant)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = Plant == pp)
}
xyplot(uptake ~ conc, data = CO2, show.given = FALSE, type = "b", col=rainbow(num))
qplot(conc, uptake, data=CO2) + facet_grid(Treatment~Type)
CO2$TT <- cbind(CO2$Type,CO2$Treatment)
for (pp in levels(CO2$TT)) {
for (pp in levels(CO2$TT)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = TT == pp)
}
}
fmlist <- list()
for (pp in levels(CO2$TT)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = TT == pp)
}
as.factor(CO2$TT)
fmlist <- list()
for (pp in levels(CO2$TT)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = TT == pp)
}
fmlist <- list()
for (pp in levels(CO2$Plant)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = Plant == pp)
}
library(ggplot2)
library(lattice)
require(stats); require(graphics)
as.factor(CO2$Plant)
as.factor(CO2$Type)
as.factor(CO2$Treatment)
fmlist <- list()
for (pp in levels(CO2$Plant)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = Plant == pp)
}
## fit Type + Treatment separately
CO2$TT <- cbind(CO2$Type,CO2$Treatment)
as.factor(CO2$TT)
CO2$TT <- c(as.character(CO2$Type),as.character(CO2$Treatment))
as.factor(CO2$TT)
fmlist <- list()
for (pp in levels(CO2$TT)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = TT == pp)
}
CO2.TT <- c(as.character(CO2[,2]),as.character(CO2$[,3]))
CO2.TT <- c(as.character(CO2[,2]),as.character(CO2[,3]))
as.factor(CO2$TT)
CO2.TT <- c(as.character(CO2[,2]),as.character(CO2[,3]))
as.factor(CO2$TT)
library(ggplot2)
library(lattice)
require(stats); require(graphics)
as.factor(CO2$Plant)
as.factor(CO2$Type)
as.factor(CO2$Treatment)
library(ggplot2)
library(lattice)
require(stats); require(graphics)
summary(CO2)
as.factor(CO2$Plant)
as.factor(CO2$Type)
as.factor(CO2$Treatment)
num <- length(unique(CO2$Plant))
CO2.TT <- c(as.character(CO2[,2]),as.character(CO2[,3]))
CO2.TT <- cbind(as.character(CO2[,2]),as.character(CO2[,3]))
as.factor(CO2$TT)
CO2.TT <- cbind(as.character(CO2[,2]),as.character(CO2[,3]))
as.factor(CO2$TT)
fmlist <- list()
for (pp in levels(CO2$TT)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = TT == pp)
}
CO2.TT <- cbind(as.character(CO2[,2]),as.character(CO2[,3]))
View(CO2.TT)
CO2$TT <- cbind(as.character(CO2[,2]),as.character(CO2[,3]))
as.factor(CO2$TT)
fmlist <- list()
for (pp in levels(CO2$TT)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = TT == pp)
}
CO2$TT <- cbind(as.character(CO2[,2]),as.character(CO2[,3]))
View(CO2)
CO2$TT <- cbind(as.character(CO2[,2])+as.character(CO2[,3]))
View(CO2)
CO2$TT <- cbind(as.character(CO2$Type)+as.character(CO2$Treatment))
CO2$TT <- interaction(CO2[c(2, 3)], drop=TRUE)
View(CO2)
as.factor(CO2$TT)
fmlist <- list()
for (pp in levels(CO2$TT)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = TT == pp)
}
lapply(fmlist[1], function(f) summary(f)$coefficients[1,4])
lapply(fmlist[1], function(f) summary(f)$coefficients[2,4])
View(CO2)
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
xyplot(uptake ~ conc | Plant, data = CO2, show.given = FALSE, type = "b", col=rainbow(num))
xyplot(uptake ~ conc | TT, data = CO2, show.given = FALSE,
type = "b", col=1)
xyplot(uptake ~ conc | TT, data = CO2,
index.cond=list(c(1,2,3,4)),
show.given = FALSE, type = "a",
layout = c(2, 2),
main="Scatterplot by Plant",
ylab="CO2 Uptake", xlab="CO2 Concentration")
ggplot(CO2, aes(conc, uptake)) + geom_point() +
facet_grid(~TT, labeller = label_both) + coord_equal() +
labs(x = "Uptake", y = "Conc")
qplot(conc, uptake, data=CO2) + facet_grid(Treatment~Type)
xyplot(uptake ~ conc | TT, data = CO2,
index.cond=list(c(1,2,3,4)),
show.given = FALSE, type = "a",
layout = c(2, 2),
main="Scatterplot by Plant",
ylab="CO2 Uptake", xlab="CO2 Concentration",
panel = function(...) {
panel.abline(v=500, lty = "dotted", col = "black")
panel.xyplot(...)
)
xyplot(uptake ~ conc | TT, data = CO2,
index.cond=list(c(1,2,3,4)),
show.given = FALSE, type = "a",
layout = c(2, 2),
main="Scatterplot by Plant",
ylab="CO2 Uptake", xlab="CO2 Concentration",
panel = function(...) {
panel.abline(v=500, lty = "dotted", col = "black")
panel.xyplot(...)    }
)
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
xy <- xyplot(uptake ~ conc | TT, data = CO2,
index.cond=list(c(1,2,3,4)),
show.given = FALSE, type = "a",
layout = c(2, 2),
main="Scatterplot by Plant",
ylab="CO2 Uptake", xlab="CO2 Concentration",
panel = function(...) {
panel.abline(v=mu, lty="dotted", col="red")
panel.xyplot(...)    }
)
print(xy)
library(ggplot2)
library(lattice)
require(stats); require(graphics)
summary(CO2)
as.factor(CO2$Plant)
as.factor(CO2$Type)
as.factor(CO2$Treatment)
## fit Type + Treatment separately
CO2$TT <- cbind(as.character(CO2$Type),as.character(CO2$Treatment))
CO2$TT <- interaction(CO2[c(2, 3)], drop=TRUE)
as.factor(CO2$TT)
fmlist <- list()
for (pp in levels(CO2$TT)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = TT == pp)
}
## check the coefficients by plant
# print(sapply(fmlist, coef), digits = 3)
# summary(fmlist[1])
lapply(fmlist[1], function(f) summary(f)$coefficients[1,4])
lapply(fmlist[1], function(f) summary(f)$coefficients[2,4])
xyplot(uptake ~ conc | TT, data = CO2,
index.cond=list(c(1,2,3,4)),
show.given = FALSE, type = "a",
layout = c(2, 2),
main="Scatterplot by Plant",
ylab="CO2 Uptake", xlab="CO2 Concentration",
panel = function(...) {
panel.abline(v=500, lty = "dotted", col = "black")
panel.xyplot(...)    }
)
xyplot(sepal.length ~ petal.width | iris.type, data = iris,
panel = function( x,y,...) {
panel.abline( h=y[ which(x==0.5) ], lty = "dotted", col = "black")
panel.xyplot( x,y,...)
})
xyplot(uptake ~ conc | TT, data = CO2,
index.cond=list(c(1,2,3,4)),
show.given = FALSE, type = "a",
layout = c(2, 2),
main="Scatterplot by Plant",
ylab="CO2 Uptake", xlab="CO2 Concentration",
panel = function(...) {
panel.abline(v=500, lty = "dotted", col = "black")
panel.xyplot(...)    },
panel.superpose
)
xyplot(uptake ~ conc | TT, data = CO2,
show.given = FALSE, type = "a",
layout = c(2, 2),
main="Scatterplot by Plant",
ylab="CO2 Uptake", xlab="CO2 Concentration",
panel = function(...) {
panel.abline(v=500, lty = "dotted", col = "red")
panel.xyplot(...)    }
)
xyplot(uptake ~ conc | TT, data = CO2,
show.given = FALSE, type = "a", col="blue"
layout = c(2, 2),
main="Scatterplot by Plant",
ylab="CO2 Uptake", xlab="CO2 Concentration",
panel = function(...) {
panel.abline(v=500, lty = "dotted", col = "red")
panel.xyplot(...)    }
)
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
print(sapply(fmlist, coef), digits = 3)
print(sapply(fmlist(1), coef), digits = 3)
print(sapply(fmlist[1], coef), digits = 3)
print(sapply(fmlist[1,1], coef), digits = 3)
x1 <- lapply(fmlist[1], function(f) summary(f)$coefficients[1,4])
x2 <- lapply(fmlist[1], function(f) summary(f)$coefficients[2,4])
y <- x1[id]+x2[id]*mu
id <- "Quebec.nonchilled"
y <- x1[id]+x2[id]*mu
mu <- 500
y <- x1[id]+x2[id]*mu
summary(x1)
x1 <- fmlist[1]$coefficients[1,4])
x1 <- summary(fmlist[1])$coefficients[1,4]
x1 <- fmlist[1]$coefficients[1,4]
fmlist[1]$coefficients[1,4]
fmlist[1]
fmlist[1]$coefficients
fmlist[1].coefficients
summary(fmlist[1])$coefficients[, 2]
summary(fmlist)$coefficients[, 2]
sapply(fmlist, function(f) summary(f)$coefficients[,4])
x1 <- sapply(fmlist, function(f) summary(f)$coefficients[,4])
x1[1,2]
fmlist[2]
fmlist[1]
fmlist[2]
fmlist[3]
fmlist[4]
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
x1 <- sapply(fmlist[1], function(f) summary(f)$coefficients[1,4])
x2 <- sapply(fmlist[1], function(f) summary(f)$coefficients[2,4])
x1 <- sapply(fmlist, function(f) summary(f)$coefficients[,4])
x1[1,2]
x1[1,2]
x1[2,2]
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
library(ggplot2)
library(lattice)
require(stats); require(graphics)
summary(CO2)
as.factor(CO2$Plant)
as.factor(CO2$Type)
as.factor(CO2$Treatment)
## fit Type + Treatment separately
CO2$TT <- cbind(as.character(CO2$Type),as.character(CO2$Treatment))
CO2$TT <- interaction(CO2[c(2, 3)], drop=TRUE)
as.factor(CO2$TT)
fmlist <- list()
for (pp in levels(CO2$TT)) {
fmlist[[pp]] <- glm(uptake ~ conc, data = CO2, subset = TT == pp)
}
## check the coefficients by plant
print(sapply(fmlist, coef), digits = 3)
# summary(fmlist[1])
x1 <- sapply(fmlist[1], function(f) summary(f)$coefficients[1,4])
x1 <- sapply(fmlist, function(f) summary(f)$coefficients[,4])
View(`x1`)
x1[1,2]
x1[2,2]
View(`x1`)
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
x1[1,1]
x1[2,1]
x1[1,1]
x1[2,1]*500
x1 <- sapply(fmlist, function(f) summary(f)$coefficients[,4])
x1[1,1]
x1[2,1]*500
fmlist[1]
x1 <- sapply(fmlist, function(f) summary(f)$coefficients[,2])
x1[1,1]
x1[2,1]*500
x1 <- sapply(fmlist, function(f) summary(f)$coefficients[,1])
x1[1,1]
x1[2,1]*500
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
shiny::runApp('C:/Users/LCK/Desktop/Developing Data Products/Project')
library(slidify)
author("DevDataProd")
